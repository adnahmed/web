interface User {
    id: UUID!
    first_name: String
    middle_name: String
    last_name: String
}

interface AuthenticationResponse {
    code: Int!
    message: String!
    success: Boolean!
}

type UserRegisterResponse {
    code: Int!
    message: String!
    success: Boolean!
    user: User
}
type LoginResponse implements AuthenticationResponse {
    code: Int!
    message: String!
    success: Boolean!
    token: String
}

type Query {
    loginOther(username: String!, password: String!, role: String!, administratorUsername: String!): LoginResponse!
    loginAdministrator(username: String!, password: String!): LoginResponse!
}

type Mutation {
    registerAdministrator(username: String!, password: String!, first_name:String!, middle_name:String, last_name:String): UserRegisterResponse
    registerOther(username: String!, password: String!, first_name:String!, middle_name:String, last_name:String, role: String!, administratorUsername: String!): UserRegisterResponse
}
